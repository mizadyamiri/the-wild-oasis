import{e as t,d as m,g as b}from"./index-b1bbfbe0.js";async function g(){const{data:e,error:r}=await t.from("cabins").select("*");if(r)throw console.error(r),new Error("Cabins could not be loaded");return e}async function h(e,r){var s,l;const a=(l=(s=e.image)==null?void 0:s.startsWith)==null?void 0:l.call(s,m),n=`${Math.random()}-${e.image.name}`.replaceAll("/",""),c=a?e.image:`${m}/storage/v1/object/public/cabin-images/${n}`;let o=t.from("cabins");r||(o=o.insert([{...e,image:c}])),r&&(o=o.update({...e,image:c}).eq("id",r));const{data:i,error:d}=await o.select().single();if(d)throw console.error(d),new Error("Cabins could not be created");if(a)return i;const{error:u}=await t.storage.from("cabin-images").upload(n,e.image);if(u)throw await t.from("cabins").delete().eq("id",i.id),console.error(u),new Error("Cabin image could not be uploaded");return i}async function p(e){const{data:r,error:a}=await t.from("cabins").delete().eq("id",e);if(a)throw console.error(a),new Error("Cabins could not be deleted");return r}function w(){const{isLoading:e,data:r,error:a}=b({queryKey:["cabins"],queryFn:g});return{cabins:r,isLoading:e,error:a}}export{h as c,p as d,w as u};
